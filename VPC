provider "aws" {

  region = "us-east-1"
 
}
 
resource "aws_vpc" "test-vpc" {

  cidr_block = "10.0.0.0/16"

}
 
resource "aws_subnet" "public-subnet" {

  vpc_id     = aws_vpc.test-vpc.id

  cidr_block = "10.0.0.0/24"
 
  tags = {

    Name = "Public-subnet"

  }

}
 
 
resource "aws_subnet" "private-subnet" {

  vpc_id     = aws_vpc.test-vpc.id

  cidr_block = "10.0.1.0/24"
 
  tags = {

    Name = "Private-subnet"

  }

}

resource "aws_security_group" "test_access" {

  name        = "test_access"

  vpc_id      = aws_vpc.test-vpc.id

  description = "allow ssh and http"
 
  ingress {

    from_port   = 80

    to_port     = 80

    protocol    = "tcp"

    cidr_blocks = ["0.0.0.0/0"]

  }
 
  ingress {

    from_port   = 22

    to_port     = 22

    protocol    = "tcp"

    cidr_blocks = ["0.0.0.0/0"]

  }
 
  egress {

    from_port   = 0

    to_port     = 0

    protocol    = "-1"

    cidr_blocks = ["0.0.0.0/0"]

  }

}
 
 
resource "aws_internet_gateway" "test-igw" {

  vpc_id = aws_vpc.test-vpc.id
 
  tags = {

    Name = "test-igw"

  }

}
 
 
resource "aws_route_table" "public-rt" {

  vpc_id = aws_vpc.test-vpc.id
 
  route {

    cidr_block = "0.0.0.0/0"

    gateway_id = aws_internet_gateway.test-igw.id

  }
 
 
  tags = {

    Name = "public-rt"

  }

}

resource "aws_route_table_association" "public-asso" {

  subnet_id      = aws_subnet.public-subnet.id

  route_table_id = aws_route_table.public-rt.id
 
}
 
resource "aws_instance" "sanjay-server" {

  ami             = "ami-05ffe3c48a9991133"

  subnet_id       = aws_subnet.public-subnet.id

  instance_type   = "t2.micro"

  security_groups = ["${aws_security_group.test_access.id}"]

  key_name        = "lti"

  tags = {

    Name     = "test-World"

    Stage    = "testing"

    Location = "chennai"

  }
 
}
 
 
resource "aws_eip" "sanjay-ec2-eip" {

  instance = aws_instance.sanjay-server.id

}
 
 
resource "aws_key_pair" "lti" {

  key_name   = "lti"

  public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC6IKk/bH36QXNScNhyUK1aaIPBfzJbXhH4Di0anm2MH/5lSbD+qJEs3SXuaNTeXx+Fjic36hkbWdp4nyJOXwGL/0bqHBhRZdyKvfc6SO0bIzA7dALXN4bpXITF3WpdJL6SUS4JScDIBctVMBjYNts44elVpT4A7WVh9zGpV9nIa9nLX1LSxubLc2BWLJG2ejcsMIGxW24/6wi+LiF21pLyQ8HFWhQLUZ11QUNYAy/PywiA0UkUhqLRbiJ8tFU/EP86M8trSRW2q8LVZ6SrusETbZNbrYHtehKSm6b9UNCeEoabRT5EQXYQ3UtZRHd9dvXX0GwbijCSPd9T01B0Xd83ALo8TBrUEFL+w32s1043DWPa5hnn5DN23K46/eqhr5mPr1JOgOP78S76XtctEVc7Kd2BLBS5UWfTDnovpPIfj60yFcXa9B3D+l/IKHcFazFuNVd111SDvJyy6CypWlQRZ6E8FvgvYbVQBBY0SsmCnXp/3pVEXb2ZyZmbZwVt7h8= root@ansible.example.com"

}

resource "aws_instance" "database-server" {

  ami             = "ami-05ffe3c48a9991133"

  subnet_id       = aws_subnet.private-subnet.id

  instance_type   = "t2.micro"

  security_groups = ["${aws_security_group.test_access.id}"]

  key_name        = "lti"

  tags = {

    Name     = "db-World"

    Stage    = "stage-base"

    Location = "delhi"

  }
 
}
 
resource "aws_eip" "nat-eip" {

  tags = {

    Name = "nat-eip"

  }

}
 
resource "aws_nat_gateway" "my-ngw" {

  allocation_id = aws_eip.nat-eip.id

  subnet_id     = aws_subnet.public-subnet.id

}
 
resource "aws_route_table" "private-rt" {

  vpc_id = aws_vpc.test-vpc.id
 
  route {

    cidr_block = "0.0.0.0/0"

    gateway_id = aws_nat_gateway.my-ngw.id

  }

  tags = {

    Name = "private-rt"

  }

}
 
resource "aws_route_table_association" "private-asso" {

  subnet_id      = aws_subnet.private-subnet.id

  route_table_id = aws_route_table.private-rt.id

}
 
